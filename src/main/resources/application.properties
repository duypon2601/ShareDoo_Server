spring.application.name=ShareDoo

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

# JPA settings
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
spring.jpa.database=${SPRING_JPA_DATABASE:postgresql}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}

# JWT Configuration
mathcha_edu.jwt.base64-secret=${MATHCHA_EDU_JWT_BASE64_SECRET}
mathcha_edu.jwt.token-validity-in-seconds=${MATHCHA_EDU_JWT_TOKEN_VALIDITY_IN_SECONDS}

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=${SPRINGDOC_API_DOCS_PATH:/api-docs}
springdoc.swagger-ui.path=${SPRINGDOC_SWAGGER_UI_PATH:/swagger-ui.html}
springdoc.swagger-ui.operationsSorter=${SPRINGDOC_SWAGGER_UI_OPERATIONS_SORTER:method}
springdoc.swagger-ui.tagsSorter=${SPRINGDOC_SWAGGER_UI_TAGS_SORTER:alpha}
springdoc.swagger-ui.tryItOutEnabled=${SPRINGDOC_SWAGGER_UI_TRY_IT_OUT_ENABLED:true}
springdoc.swagger-ui.filter=${SPRINGDOC_SWAGGER_UI_FILTER:true}
springdoc.swagger-ui.syntaxHighlight.activated=${SPRINGDOC_SWAGGER_UI_SYNTAX_HIGHLIGHT_ACTIVATED:true}
springdoc.swagger-ui.syntaxHighlight.theme=${SPRINGDOC_SWAGGER_UI_SYNTAX_HIGHLIGHT_THEME:monokai}

# Hugging Face Config
huggingface.api.key=${HUGGINGFACE_API_KEY}
huggingface.api.url=${HUGGINGFACE_API_URL}
# AI Recommendation Config
ai.recommendation.threshold=${AI_RECOMMENDATION_THRESHOLD:0.3}
ai.recommendation.max-recommendations=${AI_RECOMMENDATION_MAX_RECOMMENDATIONS:10}
ai.recommendation.fallback-enabled=${AI_RECOMMENDATION_FALLBACK_ENABLED:true}

# PayOS Payment Configuration
payos.client-id=${PAYOS_CLIENT_ID}
payos.api-key=${PAYOS_API_KEY}
payos.checksum-key=${PAYOS_CHECKSUM_KEY}
payos.return-url=${PAYOS_RETURN_URL}
payos.cancel-url=${PAYOS_CANCEL_URL}
payos.webhook-url=${PAYOS_WEBHOOK_URL}

# PayOS Transfer API Configuration
payos.transfer.api.url=${PAYOS_TRANSFER_API_URL}
payos.transfer.client.id=${PAYOS_TRANSFER_CLIENT_ID}
payos.transfer.client.secret=${PAYOS_TRANSFER_CLIENT_SECRET}

# Task Scheduler Configuration
spring.task.scheduling.pool.size=${SPRING_TASK_SCHEDULING_POOL_SIZE:5}

# Google OAuth2 Login
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE:openid,profile,email}
spring.security.oauth2.client.provider.google.user-name-attribute=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_NAME_ATTRIBUTE:sub}

# Profile Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}
