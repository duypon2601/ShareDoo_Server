spring.application.name=ShareDoo

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/test2
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration (use placeholder - replace with actual secret in production)
mathcha_edu.jwt.base64-secret=${JWT_SECRET:your-jwt-secret-here}
mathcha_edu.jwt.token-validity-in-seconds=8640000

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
springdoc.swagger-ui.syntaxHighlight.theme=monokai

# Hugging Face Config (use placeholder - replace with actual key in production)
huggingface.api.key=${HUGGINGFACE_API_KEY:your-huggingface-api-key-here}
huggingface.api.url=https://api-inference.huggingface.co/models/facebook/bart-large-mnli

# AI Recommendation Config
ai.recommendation.threshold=0.3
ai.recommendation.max-recommendations=10
ai.recommendation.fallback-enabled=true

# PayOS Payment Configuration (use placeholders - replace with actual credentials in production)
payos.client-id=${PAYOS_CLIENT_ID:your-payos-client-id-here}
payos.api-key=${PAYOS_API_KEY:your-payos-api-key-here}
payos.checksum-key=${PAYOS_CHECKSUM_KEY:your-payos-checksum-key-here}
payos.return-url=http://localhost:3000/checkout
payos.cancel-url=http://localhost:3000/cancel
payos.webhook-url=http://localhost:8080/api/payment/webhook

# PayOS Transfer API Configuration (use placeholders - replace with actual credentials in production)
payos.transfer.api.url=https://api-merchant.payos.vn/v2
payos.transfer.client.id=${PAYOS_TRANSFER_CLIENT_ID:your-transfer-client-id-here}
payos.transfer.client.secret=${PAYOS_TRANSFER_CLIENT_SECRET:your-transfer-client-secret-here}

# Task Scheduler Configuration
spring.task.scheduling.pool.size=5

# Google OAuth2 Login (use placeholders - replace with actual credentials in production)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id-here}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret-here}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Profile Configuration
spring.profiles.active=local 